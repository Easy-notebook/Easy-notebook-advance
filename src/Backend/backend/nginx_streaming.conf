# Nginx配置示例 - 流式输出优化
# 放置在 /etc/nginx/sites-available/ 目录下

# 全局配置优化
worker_processes auto;
worker_connections 51200;

http {
    # 连接超时优化
    keepalive_timeout 30s;
    
    # 🚨 关键：完全禁用gzip压缩以减少流式输出延迟
    gzip off;
    gzip_vary off;
    
    # 缓冲区优化
    client_header_buffer_size 4k;
    client_body_buffer_size 64k;
    client_max_body_size 50m;
    
    # 服务器名hash优化
    server_names_hash_bucket_size 512;

server {
    listen 80;
    server_name your_domain.com;  # 替换为你的域名
    
    # 流式输出优化配置
    proxy_buffering off;                # 禁用代理缓冲
    proxy_cache off;                    # 禁用缓存
    proxy_buffer_size 1k;               # 设置极小的缓冲区
    proxy_busy_buffers_size 1k;         # 设置极小的忙碌缓冲区
    proxy_read_timeout 300s;            # 增加读取超时
    proxy_connect_timeout 10s;          # 连接超时
    proxy_send_timeout 300s;            # 发送超时
    
    # 禁用gzip压缩以减少延迟
    gzip off;
    
    location / {
        proxy_pass http://127.0.0.1:18600;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 流式输出相关头部
        proxy_set_header X-Accel-Buffering no;  # 禁用nginx缓冲
        
        # 禁用缓存头部
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # 特殊处理流式端点
    location /send_operation {
        proxy_pass http://127.0.0.1:18600;
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        
        # 完全禁用缓冲
        proxy_buffering off;
        proxy_cache off;
        proxy_buffer_size 512b;
        proxy_busy_buffers_size 512b;
        
        # 立即刷新输出
        proxy_set_header X-Accel-Buffering no;
    }
}

# HTTPS版本 (推荐生产环境使用)
# server {
#     listen 443 ssl http2;
#     server_name your_domain.com;
#     
#     ssl_certificate /path/to/certificate.crt;
#     ssl_certificate_key /path/to/private.key;
#     
#     # 复制上面的配置...
# } 
} 